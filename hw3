import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns





url=  'https://data.cityofnewyork.us/api/views/6fi9-q3ta/rows.csv?accessType=DOWNLOAD'

df=pd.read_csv(url)



df['hour_beginning'] =pd.to_datetime(df['hour_beginning'])



df['hour'] = df['hour_beginning'].dt.hour
df['month'] = df['hour_beginning'].dt.month
df['date'] = df['hour_beginning'].dt.date
df['day_name'] = df['hour_beginning'].dt.day_name()



#question 1

weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']

df=df[df['day_name'].isin(weekdays) ]

df_grouped = df.groupby('day_name')['Pedestrians'].sum().reindex(weekdays)

plt.figure(figsize=(12,6))
plt.plot(list(df_grouped.index), list(df_grouped.values), color='blue')
plt.title('Pedestrian Counts Over Weekdays')

plt.xlabel('Weekdays')
plt.ylabel('Pedestrian Count')
plt.grid(True)
plt.tight_layout()
plt.show()

#question 2

df_2019 = df[df['year'] == 2019]

weather_summary_counts = df_2019.groupby('weather_summary')['Pedestrians'].mean()

correlation_matrix = df_2019.corr()
plt.figure(figsize=(8, 6))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title('Correlation Matrix of Weather Conditions and Pedestrian Counts')
plt.tight_layout()
plt.show()

#question 3

def categorize_time_of_day(hour):
  if 5 <= hour < 12:
      return 'Morning'
  elif 12 <= hour < 17:
      return 'Afternoon'
  elif 17 <= hour < 21:
      return 'Evening'
  else:
      return 'Night'


df['time_of_day'] = df['hour'].apply(categorize_time_of_day)

pedestrian_activity_by_time = df.groupby('time_of_day')['Pedestrians'].mean()

print(pedestrian_activity_by_time)
